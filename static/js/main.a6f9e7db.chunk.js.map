{"version":3,"sources":["hero.jsx","emojiRefresh.js","images/ctf_logo_white.svg","app.js","reportWebVitals.js","index.js"],"names":["Hero","children","className","HeroPad","EmojiRefresh","emoji","list","useState","setEmoji","useLayoutEffect","min","max","length","Math","floor","random","useEmoji","cachedList","localStorage","getItem","JSON","parse","useEffect","navigator","userAgent","includes","then","setItem","stringify","useEmojiList","String","fromCodePoint","codepoint","description","App","href","src","ctfLogo","alt","width","height","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootElement","document","getElementById","hasChildNodes","ReactDOM","hydrate","StrictMode","render"],"mappings":"mQAEO,SAASA,EAAT,GAA6B,IAAbC,EAAY,EAAZA,SACrB,OACE,qBAAKC,UAAU,OAAf,SACE,qBAAKA,UAAU,gBAAf,SAAgCD,MAK/B,SAASE,IACd,OAAO,qBAAKD,UAAU,c,wBCPjB,SAASE,EAAT,GAAoC,EAAZH,SAAa,IAEpCI,EAoBR,SAAkBC,GAAO,IAAD,EACIC,mBAAS,MADb,mBACfF,EADe,KACRG,EADQ,KAetB,OAZAC,2BAAgB,WAmClB,IAAsBC,EAAKC,EAlCV,MAATN,IAIQ,MAARC,GAIJE,EAASF,GA0BSI,EA1BS,EA0BJC,EA1BOL,EAAKM,OAAS,EA2BvCF,EAAMG,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMD,EAAM,UA1BlD,CAACL,EAAOC,IAEJD,EAnCOW,CAsChB,WACE,IAAMC,EAAaC,aAAaC,QAAQ,cADlB,EAGPZ,mBAAuB,MAAdU,EAAqBG,KAAKC,MAAMJ,GAAc,MAA/DX,EAHe,oBAiBtB,OAZAgB,qBAAU,WACJC,UAAUC,UAAUC,SAAS,cAIrB,MAARnB,GACF,6BAAuBoB,MAAK,YAAgB,IAAbrB,EAAY,EAAZA,MAC7Ba,aAAaS,QAAQ,aAAcP,KAAKQ,UAAUvB,SAGrD,CAACC,IAEGA,EAxDMuB,IAGb,OAAIN,UAAUC,UAAUC,SAAS,aACxB,qBAAKvB,UAAU,kBAGX,MAATG,EAEA,sBAAKH,UAAU,gBAAf,UACE,+BAAO4B,OAAOC,cAAP,MAAAD,OAAM,YAAkBzB,EAAM2B,cACrC,uBAAO9B,UAAU,6BAAjB,SACGG,EAAM4B,iBAMR,qBAAK/B,UAAU,gBAAf,0BCvBM,UAA0B,2C,MCOlC,SAASgC,IACd,OACE,sBAAKhC,UAAU,MAAf,UACE,cAACF,EAAD,UACE,wBAAQE,UAAU,YAAlB,SACE,qBAAIA,UAAU,aAAd,UACE,sBAAMA,UAAU,uBAAhB,0BAA2D,IAC3D,sBAAMA,UAAU,mBAAhB,SACE,cAACE,EAAD,aAMR,sBAAMF,UAAU,eAAhB,SACE,0BAASA,UAAU,yBAAnB,UACE,cAACC,EAAD,IAEA,sBAAKD,UAAU,kBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,wBAAQA,UAAU,gBAAlB,SACE,oBAAIA,UAAU,sBAAd,gCAGF,mBAAGiC,KAAK,eAAejC,UAAU,qBAAjC,oCAIA,qBAAKkC,IAAKC,EAASC,IAAI,WAAWC,MAAM,QAAQC,OAAO,aAGzD,sBAAKtC,UAAU,iBAAf,UACE,mBAAGA,UAAU,qBAAb,0CAEA,mBAAGiC,KAAK,eAAejC,UAAU,aAAjC,sCCzCd,IAYeuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCERO,G,YAAcC,SAASC,eAAe,eAExCF,EAAYG,gBACdC,IAASC,QACP,cAAC,IAAMC,WAAP,UACE,cAACrB,EAAD,MAEFe,GAGFI,IAASG,OACP,cAAC,IAAMD,WAAP,UACE,cAACrB,EAAD,MAEFe,GAIJR,M","file":"static/js/main.a6f9e7db.chunk.js","sourcesContent":["import './hero.css';\n\nexport function Hero({ children }) {\n  return (\n    <div className=\"hero\">\n      <div className=\"hero__content\">{children}</div>\n    </div>\n  );\n}\n\nexport function HeroPad() {\n  return <div className=\"hero__pad\"></div>;\n}\n","import { useEffect, useLayoutEffect, useState } from 'react';\n\nimport './emojiRefresh.css';\n\nexport function EmojiRefresh({ children }) {\n  const list = useEmojiList();\n  const emoji = useEmoji(list);\n\n  if (navigator.userAgent.includes('ReactSnap')) {\n    return <div className=\"emoji-refresh\" />;\n  }\n\n  if (emoji != null) {\n    return (\n      <div className=\"emoji-refresh\">\n        <span>{String.fromCodePoint(...emoji.codepoint)}</span>\n        <small className=\"emoji-refresh__description\">\n          {emoji.description}\n        </small>\n      </div>\n    );\n  }\n\n  return <div className=\"emoji-refresh\">ðŸ‘‹</div>;\n}\n\nfunction useEmoji(list) {\n  const [emoji, setEmoji] = useState(null);\n\n  useLayoutEffect(() => {\n    if (emoji != null) {\n      return;\n    }\n\n    if (list == null) {\n      return;\n    }\n\n    setEmoji(list[getRandomInt(0, list.length - 1)]);\n  }, [emoji, list]);\n\n  return emoji;\n}\n\nfunction useEmojiList() {\n  const cachedList = localStorage.getItem('emoji_list');\n\n  const [list] = useState(cachedList != null ? JSON.parse(cachedList) : null);\n\n  useEffect(() => {\n    if (navigator.userAgent.includes('ReactSnap')) {\n      return;\n    }\n\n    if (list == null) {\n      import('./data/emoji').then(({ emoji }) => {\n        localStorage.setItem('emoji_list', JSON.stringify(emoji));\n      });\n    }\n  }, [list]);\n\n  return list;\n}\n\nfunction getRandomInt(min, max) {\n  return min + Math.floor(Math.random() * (max - min + 1));\n}\n","export default __webpack_public_path__ + \"static/media/ctf_logo_white.29a061b1.svg\";","import { Hero, HeroPad } from './hero';\nimport { EmojiRefresh } from './emojiRefresh';\n\nimport ctfLogo from './images/ctf_logo_white.svg';\n\nimport './app.css';\n\nexport function App() {\n  return (\n    <div className=\"app\">\n      <Hero>\n        <header className=\"app__hero\">\n          <h1 className=\"app__hello\">\n            <span className=\"rainbow rainbow_text\">Hello, World</span>{' '}\n            <span className=\"app__hello-emoji\">\n              <EmojiRefresh />\n            </span>\n          </h1>\n        </header>\n      </Hero>\n\n      <main className=\"app__content\">\n        <section className=\"section section_addons\">\n          <HeroPad />\n\n          <div className=\"addon addon_ctf\">\n            <div className=\"addon__catchy\">\n              <header className=\"addon__header\">\n                <h2 className=\"addon__header-title\">Capture The Flag</h2>\n              </header>\n\n              <a href=\"/addons/ctf/\" className=\"addon__link_hidden\">\n                Capture&nbsp;The&nbsp;Flag\n              </a>\n\n              <img src={ctfLogo} alt=\"CTF Logo\" width=\"180px\" height=\"180px\" />\n            </div>\n\n            <div className=\"addon__details\">\n              <p className=\"addon__description\">Cloud insights web extension</p>\n\n              <a href=\"/addons/ctf/\" className=\"addon__cta\">\n                Learn More\n              </a>\n            </div>\n          </div>\n        </section>\n      </main>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './app';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\nimport './rainbow.css';\n\nconst rootElement = document.getElementById('react-root');\n\nif (rootElement.hasChildNodes()) {\n  ReactDOM.hydrate(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    rootElement\n  );\n} else {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    rootElement\n  );\n}\n\nreportWebVitals();\n"],"sourceRoot":""}